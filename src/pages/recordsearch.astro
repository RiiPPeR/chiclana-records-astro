---
import Layout from '../layouts/Layout.astro'
import OrbButton from '../components/OrbButton.astro'
import type { User, Record } from '../lib/models/types/types'
import { RecordService } from '../lib/models/record'
import { logger } from './api/logger'
import RecordCard from '../components/RecordCardTsx.tsx'

// we get the cookies from Astro
const { cookies } = Astro

const accessToken = cookies.get("sb-access-token")
const refreshToken = cookies.get("sb-refresh-token")
const userCookie = cookies.get("user")

// if the user is not logged in, we redirect to the signin page
if (!accessToken || !refreshToken) {
    return redirect("/signin")
}

// we get the user from the cookie
const user: User = userCookie ? JSON.parse(userCookie.value) : null
if (!user) {
    cookies.delete("sb-access-token", { path: "/" })
    cookies.delete("sb-refresh-token", { path: "/" })
    return redirect("/signin")
}

let searchResults: Record[] = []
let error = ''

const recordService = new RecordService()
const records: Record[] = user.id ? await recordService.getUserRecords(user.id) : []

// we get the query from the URL
const urlQuery = Astro.url.searchParams.get('q')

// if there is a query, we fetch the search results
if (urlQuery) {
    try {
        const response = await fetch(`https://api.discogs.com/database/search?q=${urlQuery}&type=release&format=vinyl`, {
            headers: {
                'Authorization': `Discogs token=${import.meta.env.DISCOGS_KEY}`,
                'User-Agent': 'ChiclanaRecords/1.0'
            }
        })

        const responseData = await response.json()
        
        searchResults = responseData.results.map((record: any) => {
            const [artist, title] = record.title.split(' - ');
            return {
                image_url: record.thumb || '../assets/logo.png',
                title: title || record.title,
                artist: artist,
                year: record.year,
                country: record.country || 'Desconocido',
                label: record.label[0] || 'Desconocido',
                catno: record.catno || 'Desconocido',
                discogs_id: record.id,
        }})
        logger.info('Search results fetched successfully', { query: urlQuery, results: searchResults.length })
    } catch (e) {
        error = 'Error buscando los discos'
        logger.error('Error fetching search results', e)
    }
}

// actually, when we do the post, the page is reloading but thanks to astros view transitions
// its not noticeable
if (Astro.request.method === 'POST') {
    try {
        const formData = await Astro.request.formData()
        const query = formData.get('query')
        
        logger.info('Form submitted', { query })
        return Astro.redirect(`/recordsearch?q=${encodeURIComponent(query as string)}`)
    } catch (e) {
        error = 'Error buscando los discos'
        logger.error('Error processing form submission', e)
    }
}
---

<Layout title="Buscar discos">
    <div class="flex flex-col items-center justify-center px-4">
        <div class="text-center mb-12 relative">
            <div class="absolute w-32 h-32 bg-amber-500 rounded-full -z-10 blur-2xl opacity-30 -top-10 -left-10"></div>
            <div class="absolute w-32 h-32 bg-purple-500 rounded-full -z-10 blur-2xl opacity-30 -bottom-10 -right-10"></div>
            
            <h1 class="text-5xl font-bold text-amber-500 mb-4">Buscar disco</h1>
            <p class="text-xl text-gray-300 mb-8 max-w-2xl">
                Encuentra y busca nuevos vinilos para tu colecci√≥n
            </p>
        </div>

        <div class="w-full">
            <form method="POST" class="mb-8 flex flex-row justify-center">
                <div class="flex xl:flex-row flex-col w-5/6 xl:w-2/4t">
                    <input 
                        type="text" 
                        name="query" 
                        placeholder="Buscar un disco..." 
                        class="flex-1 p-3 bg-black/40 backdrop-blur-md text-white rounded-lg border border-gray-600 focus:border-amber-500 focus:outline-none xl:mr-10 mb-5 xl:mb-0"
                        required
                    />
                    <OrbButton 
                        text="Buscar" 
                        primaryColor="#3b82f6" 
                        secondaryColor="#22c55e"
                    />
                </div>
            </form>

            {error && <p class="text-red-500 mb-4 text-center">{error}</p>}

            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 gap-6 w-auto">
                {searchResults.map((record) => (
                    <RecordCard client:load record={record} records={records} user_id={user.id}/>
                ))}
            </div>
        </div>
    </div>
</Layout>